{"ast":null,"code":"var _jsxFileName = \"/Users/uxay/Documents/shader-training/wavy-images/wavey/src/components/ProjectCard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, Suspense } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, extend, useFrame, useLoader } from \"@react-three/fiber\";\nimport { shaderMaterial } from \"@react-three/drei\";\nimport acsMem2 from \"./imgs/acsMem2.0Banner.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WaveyShaderMaterial = shaderMaterial(\n// Uniform\n{\n  uTime: 0,\n  uColor: new THREE.Color(0.0, 0.0, 0.0),\n  uTexture: new THREE.Texture()\n}, // Vertex Shader\n\"\\n      precision mediump float;\\n   \\n      varying vec2 vUv;\\n      varying float vWave;\\n  \\n      uniform float uTime;\\n  \\n      //\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1971453045(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1971453045(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1971453045(vec4 x) {\\n     return mod289_1971453045(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1971453045(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise3(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D_1971453045 = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g_1971453045 = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g_1971453045;\\n  vec3 i1 = min( g_1971453045.xyz, l.zxy );\\n  vec3 i2 = max( g_1971453045.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D_1971453045.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289_1971453045(i);\\n  vec4 p = permute_1971453045( permute_1971453045( permute_1971453045(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D_1971453045.wyz - D_1971453045.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1_1971453045 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0_1971453045 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1_1971453045.xy,h.z);\\n  vec3 p3 = vec3(a1_1971453045.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt_1971453045(vec4(dot(p0_1971453045,p0_1971453045), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0_1971453045 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0_1971453045,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\n  \\n      void main() {\\n        vUv = uv;\\n  \\n        vec3 pos = position;\\n        float noiseFreq = 1.6;\\n        float noiseAmp = 0.2;\\n        vec3 noisePos = vec3(pos.x * noiseFreq + uTime, pos.y, pos.z);\\n        pos.z += snoise3(noisePos) * noiseAmp;\\n        vWave = pos.z;\\n  \\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);  \\n      }\\n    \", // Fragment Shader\n\"\\n      precision mediump float;\\n  \\n      uniform vec3 uColor;\\n      uniform float uTime;\\n      uniform sampler2D uTexture;\\n  \\n      varying vec2 vUv;\\n      varying float vWave;\\n  \\n      void main() {\\n        float wave = vWave * 0.12;\\n        vec3 texture = texture2D(uTexture, vUv + wave).rgb;\\n        gl_FragColor = vec4(texture, 1.0); \\n      }\\n    \");\nextend({\n  WaveyShaderMaterial\n});\nconst Wave = () => {\n  _s();\n  const ref = useRef();\n  useFrame(_ref => {\n    let {\n      clock\n    } = _ref;\n    return ref.current.uTime = clock.getElapsedTime();\n  });\n  const [image] = useLoader(THREE.TextureLoader, [acsMem2]);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n      args: [9, 16]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"waveyShaderMaterial\", {\n      uColor: \"hotpink\",\n      ref: ref,\n      uTexture: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n};\n_s(Wave, \"wdEDJUgoFCG+cVpKLHan5SiFV1U=\", false, function () {\n  return [useFrame, useLoader];\n});\n_c = Wave;\nconst ProjectCard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"projectItem\",\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      className: \"wid80\",\n      camera: {\n        fov: 12,\n        position: [-4, -2, 24]\n      },\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: /*#__PURE__*/_jsxDEV(Wave, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"projectName\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \" text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 24\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), \"ACS Membership 2.0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ProjectCard;\nexport default ProjectCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wave\");\n$RefreshReg$(_c2, \"ProjectCard\");","map":{"version":3,"names":["React","useRef","Suspense","THREE","Canvas","extend","useFrame","useLoader","shaderMaterial","acsMem2","jsxDEV","_jsxDEV","WaveyShaderMaterial","uTime","uColor","Color","uTexture","Texture","Wave","_s","ref","_ref","clock","current","getElapsedTime","image","TextureLoader","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","ProjectCard","class","className","camera","fov","position","fallback","_c2","$RefreshReg$"],"sources":["/Users/uxay/Documents/shader-training/wavy-images/wavey/src/components/ProjectCard.js"],"sourcesContent":["import React, { useRef, Suspense } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, extend, useFrame, useLoader } from \"@react-three/fiber\";\nimport { shaderMaterial } from \"@react-three/drei\";\nimport glsl from \"babel-plugin-glsl/macro\";\nimport acsMem2 from \"./imgs/acsMem2.0Banner.svg\";\n\nconst WaveyShaderMaterial = shaderMaterial (\n    // Uniform\n    {\n      uTime: 0,\n      uColor: new THREE.Color(0.0, 0.0, 0.0),\n      uTexture: new THREE.Texture()\n    },\n    // Vertex Shader\n    glsl`\n      precision mediump float;\n   \n      varying vec2 vUv;\n      varying float vWave;\n  \n      uniform float uTime;\n  \n      #pragma glslify: snoise3 = require(glsl-noise/simplex/3d.glsl);\n  \n      void main() {\n        vUv = uv;\n  \n        vec3 pos = position;\n        float noiseFreq = 1.6;\n        float noiseAmp = 0.2;\n        vec3 noisePos = vec3(pos.x * noiseFreq + uTime, pos.y, pos.z);\n        pos.z += snoise3(noisePos) * noiseAmp;\n        vWave = pos.z;\n  \n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);  \n      }\n    `,\n    // Fragment Shader\n    glsl`\n      precision mediump float;\n  \n      uniform vec3 uColor;\n      uniform float uTime;\n      uniform sampler2D uTexture;\n  \n      varying vec2 vUv;\n      varying float vWave;\n  \n      void main() {\n        float wave = vWave * 0.12;\n        vec3 texture = texture2D(uTexture, vUv + wave).rgb;\n        gl_FragColor = vec4(texture, 1.0); \n      }\n    `\n  );\n  \n  extend({ WaveyShaderMaterial });\n  \n  const Wave = () => {\n    const ref = useRef();\n    useFrame(({ clock }) => (ref.current.uTime = clock.getElapsedTime()));\n  \n    const [image] = useLoader(THREE.TextureLoader, [\n      acsMem2\n    ]);\n  \n    return (\n      <mesh>\n        <planeBufferGeometry args={[9, 16]} />\n        <waveyShaderMaterial uColor={\"hotpink\"} ref={ref} uTexture={image} />\n      </mesh>\n    );\n  };\n\nconst ProjectCard = () => {\n  return (\n    <div class=\"projectItem\">\n        <Canvas className='wid80' camera={{ fov: 12, position: [-4, -2, 24] }}>\n          <Suspense fallback={null}>\n            <Wave />\n          </Suspense>\n        </Canvas>\n        <div class=\"projectName\">\n            <h2 class=\" text\">\n                <span> <sup>01</sup> </span>\n                ACS Membership 2.0\n            </h2>\n        </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}