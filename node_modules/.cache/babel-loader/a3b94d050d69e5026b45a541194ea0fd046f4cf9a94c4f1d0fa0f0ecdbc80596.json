{"ast":null,"code":"var _jsxFileName = \"/Users/uxay/Documents/shader-training/wavy-images/wavey/src/components/ProjectCard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WaveyShaderMaterial = shaderMaterial(\n// Uniform\n{\n  uTime: 0,\n  uColor: new THREE.Color(0.0, 0.0, 0.0),\n  uTexture: new THREE.Texture()\n},\n// Vertex Shader\nglsl`\n      precision mediump float;\n   \n      varying vec2 vUv;\n      varying float vWave;\n  \n      uniform float uTime;\n  \n      #pragma glslify: snoise3 = require(glsl-noise/simplex/3d.glsl);\n  \n      void main() {\n        vUv = uv;\n  \n        vec3 pos = position;\n        float noiseFreq = 2.0;\n        float noiseAmp = 0.4;\n        vec3 noisePos = vec3(pos.x * noiseFreq + uTime, pos.y, pos.z);\n        pos.z += snoise3(noisePos) * noiseAmp;\n        vWave = pos.z;\n  \n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);  \n      }\n    `,\n// Fragment Shader\nglsl`\n      precision mediump float;\n  \n      uniform vec3 uColor;\n      uniform float uTime;\n      uniform sampler2D uTexture;\n  \n      varying vec2 vUv;\n      varying float vWave;\n  \n      void main() {\n        float wave = vWave * 0.2;\n        vec3 texture = texture2D(uTexture, vUv + wave).rgb;\n        gl_FragColor = vec4(texture, 1.0); \n      }\n    `);\nextend({\n  WaveyShaderMaterial\n});\nconst Wave = () => {\n  _s();\n  const ref = useRef();\n  useFrame(_ref => {\n    let {\n      clock\n    } = _ref;\n    return ref.current.uTime = clock.getElapsedTime();\n  });\n  const [image] = useLoader(THREE.TextureLoader, [\"https://images.unsplash.com/photo-1604011092346-0b4346ed714e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1534&q=80\"]);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n      args: [9, 16]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"waveyShaderMaterial\", {\n      uColor: \"hotpink\",\n      ref: ref,\n      uTexture: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n};\n_s(Wave, \"wdEDJUgoFCG+cVpKLHan5SiFV1U=\", true);\n_c = Wave;\nconst ProjectCard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"projectItem\",\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        fov: 12,\n        position: [-4, -2, 20]\n      },\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: /*#__PURE__*/_jsxDEV(Wave, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"projectName\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \" text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 24\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), \"ACS Membership 2.0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ProjectCard;\nexport default ProjectCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wave\");\n$RefreshReg$(_c2, \"ProjectCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WaveyShaderMaterial","shaderMaterial","uTime","uColor","THREE","Color","uTexture","Texture","glsl","extend","Wave","_s","ref","useRef","useFrame","_ref","clock","current","getElapsedTime","image","useLoader","TextureLoader","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","ProjectCard","class","Canvas","camera","fov","position","Suspense","fallback","_c2","$RefreshReg$"],"sources":["/Users/uxay/Documents/shader-training/wavy-images/wavey/src/components/ProjectCard.js"],"sourcesContent":["import React from \"react\";\n\nconst WaveyShaderMaterial = shaderMaterial (\n    // Uniform\n    {\n      uTime: 0,\n      uColor: new THREE.Color(0.0, 0.0, 0.0),\n      uTexture: new THREE.Texture()\n    },\n    // Vertex Shader\n    glsl`\n      precision mediump float;\n   \n      varying vec2 vUv;\n      varying float vWave;\n  \n      uniform float uTime;\n  \n      #pragma glslify: snoise3 = require(glsl-noise/simplex/3d.glsl);\n  \n      void main() {\n        vUv = uv;\n  \n        vec3 pos = position;\n        float noiseFreq = 2.0;\n        float noiseAmp = 0.4;\n        vec3 noisePos = vec3(pos.x * noiseFreq + uTime, pos.y, pos.z);\n        pos.z += snoise3(noisePos) * noiseAmp;\n        vWave = pos.z;\n  \n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);  \n      }\n    `,\n    // Fragment Shader\n    glsl`\n      precision mediump float;\n  \n      uniform vec3 uColor;\n      uniform float uTime;\n      uniform sampler2D uTexture;\n  \n      varying vec2 vUv;\n      varying float vWave;\n  \n      void main() {\n        float wave = vWave * 0.2;\n        vec3 texture = texture2D(uTexture, vUv + wave).rgb;\n        gl_FragColor = vec4(texture, 1.0); \n      }\n    `\n  );\n  \n  extend({ WaveyShaderMaterial });\n  \n  const Wave = () => {\n    const ref = useRef();\n    useFrame(({ clock }) => (ref.current.uTime = clock.getElapsedTime()));\n  \n    const [image] = useLoader(THREE.TextureLoader, [\n      \"https://images.unsplash.com/photo-1604011092346-0b4346ed714e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1534&q=80\"\n    ]);\n  \n    return (\n      <mesh>\n        <planeBufferGeometry args={[9, 16]} />\n        <waveyShaderMaterial uColor={\"hotpink\"} ref={ref} uTexture={image} />\n      </mesh>\n    );\n  };\n\nconst ProjectCard = () => {\n  return (\n    <div class=\"projectItem\">\n        <Canvas camera={{ fov: 12, position: [-4, -2, 20] }}>\n          <Suspense fallback={null}>\n            <Wave />\n          </Suspense>\n        </Canvas>\n        <div class=\"projectName\">\n            <h2 class=\" text\">\n                <span> <sup>01</sup> </span>\n                ACS Membership 2.0\n            </h2>\n        </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}